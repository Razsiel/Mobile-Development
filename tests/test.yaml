# First install: "git clone https://github.com/svanoort/pyresttest.git" &
# >> "sudo python setup.py install"
# Quickstart guide: "https://github.com/svanoort/pyresttest/blob/master/quickstart.md"
# Run script: "resttest.py https://www.imready.ml test.yaml"

---
- config:
    - testset: "Quickstart app tests"

# Inloggen username en password als JSON   username=client1  pass=client1
# De enige call waar je dan op kan testen krijg je een Token terug (json object)
# Dus in de header gooi ik de de key maar in het autorization object
# - headers: {Authorization: "$token"}

# LOGIN TEST
- test:
    - group: "Authentication"
    - name: "Login using basic auth"
    - url: "/api/v1/login/"
    - method: 'POST'
    - body: '{"username":"admin", "password":"admin"}'
    - headers: {"Content-Type": "application/json"}
    - expected_status: [200]
    - extract_binds:
        - "authtoken": {"jsonpath_mini": "authtoken"}

  # BLOCK TESTEN
- test:
    - group: "Blocks"
    - name: "Basic blocks smoketest"
    - url: "/api/v1/blocks/"
    - headers: {template: {"Content-Type": "application/json", "Authorization": "$authtoken"}}

- test:
    - group: "Blocks"
    - name: "Test with schema validations"
    - url: {'template': "/api/v1/blocks/"}
    - headers: {template: {"Content-Type": "application/json", "Authorization": "$authtoken"}}
    - validators:
        - compare: {header: "content-type", comparator: contains, expected: 'application/json'}

- test:
    - group: "Blocks"
    - name: "Make sure blocks are there"
    - url: "/api/v1/blocks/"
    - headers: {template: {"Content-Type": "application/json", "Authorization": "$authtoken"}}
    - expected_status: [200]

- test:
    - group: "Blocks"
    - name: "Make sure specific block isnt is there"
    - url: "/api/v1/blocks/9999999/"
    - headers: {template: {"Content-Type": "application/json", "Authorization": "$authtoken"}}
    - expected_status: [404]

- test:
    - group: "Blocks"
    - name: "Create a new block"
    - url: "/api/v1/blocks/"
    - method: "POST"
    - body: '{"name": "Test","description": "Dit is een test","imageURL": "","activities": []}'
    - headers: {template: {"Content-Type": "application/json", "Authorization": "$authtoken"}}
    - expected_status: [201]
    - extract_binds:
        - 'blockId': {header: 'Id'}

- test:
    - group: "Blocks"
    - name: "Get the block just created and check it"
    - url: {'template': "/api/v1/blocks/$blockId/"}
    - headers: {template: {"Content-Type": "application/json", "Authorization": "$authtoken"}}
    - validators:
        - compare: {jsonpath_mini: 'id', comparator: 'str_eq', expected: {template: '$blockId'}}
        - extract_test: {jsonpath_mini: 'id', test: 'exists'}

- test:
    - group: "Blocks"
    - name: "Make sure specific block is there"
    - url: {'template': "/api/v1/blocks/$blockId"}
    - headers: {template: {"Content-Type": "application/json", "Authorization": "$authtoken"}}
    - expected_status: [200]

- test:
    - group: "Blocks"
    - name: "delete the block that is just created"
    - url: {'template': "/api/v1/blocks/$blockId/"}
    - headers: {template: {"Content-Type": "application/json", "Authorization": "$authtoken"}}
    - method: 'DELETE'

- test:
    - group: "Blocks"
    - name: "check if the block is deleted"
    - url: {'template': "/api/v1/blocks/$blockId/"}
    - headers: {template: {"Content-Type": "application/json", "Authorization": "$authtoken"}}
    - expected_status: [404]

  # CLIENT TESTEN
- test:
    - group: "Clients"
    - name: "Basic clients smoketest"
    - url: "/api/v1/clients/"
    - headers: {template: {"Content-Type": "application/json", "Authorization": "$authtoken"}}

- test:
    - group: "Clients"
    - name: "Test with schema validations"
    - url: {'template': "/api/v1/clients/"}
    - headers: {template: {"Content-Type": "application/json", "Authorization": "$authtoken"}}
    - validators:
        - compare: {header: "content-type", comparator: contains, expected: "application/json"}
    - expected_status: [200]

- test:
    - group: "Clients"
    - name: "Make sure clients are there"
    - url: "/api/v1/clients/"
    - headers: {template: {"Content-Type": "application/json", "Authorization": "$authtoken"}}
    - expected_status: [200]

- test:
    - group: "Clients"
    - name: "Create a new client"
    - url: "/api/v1/clients/"
    - method: "POST"
    - body: '{"name": "Test", "points": 1, "role": "client", "messages": [], "family": [], "appointments": [], "caregivers": [], "blocks": []}'
    - headers: {template: {"Content-Type": "application/json", "Authorization": "$authtoken"}}
    - expected_status: [201]
    - extract_binds:
        - 'clientId': {header: 'Id'}

- test:
    - group: "Clients"
    - name: "Get the client just created and check it"
    - url: {'template': "/api/v1/clients/$clientId/"}
    - headers: {template: {"Content-Type": "application/json", "Authorization": "$authtoken"}}
    - validators:
        - compare: {jsonpath_mini: 'id', comparator: 'str_eq', expected: {template: '$clientId'}}
        - extract_test: {jsonpath_mini: 'id', test: 'exists'}

- test:
    - group: "Clients"
    - name: "Make sure specific client is there"
    - url: {'template': "/api/v1/clients/$clientId"}
    - headers: {template: {"Content-Type": "application/json", "Authorization": "$authtoken"}}
    - expected_status: [200]

# LOGOUT TEST
- test:
    - group: "Authentication"
    - name: "Logout"
    - url: "/api/v1/logout/"
    - method: 'POST'
    - headers: {template: {"Content-Type": "application/json", "Authorization": "$authtoken"}}

- test:
    - group: "Authentication"
    - name: "Check if logout was succesful"
    - url: "/api/v1/blocks/"
    - headers: {template: {"Content-Type": "application/json", "Authorization": "$authtoken"}}
    - expected_status: [401]
